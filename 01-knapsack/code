public class Knapsack {
    public int knapSack(int w, int[] wt, int[] val, int n) {
        int[][] t = new int[n + 1][w + 1];

        // Initialize matrix
        for (int i = 0; i < w + 1; i++) {
            t[0][i] = 0;
        }
        for (int j = 0; j < n + 1; j++) {
            t[j][0] = 0;
        }

        // Choice Diagram to code
        for (int i = 1; i < n + 1; i++) {
            for (int j = 1; j < w + 1; j++) {
                // 1. In case of choice
                if (wt[i - 1] <= j) {
                    t[i][j] = Math.max(val[i - 1] + t[i - 1][j - wt[i - 1]], t[i - 1][j]);
                }
                // 2. No choice
                else if (wt[i - 1] > j) {
                    t[i][j] = t[i - 1][j];
                }
            }
        }
        return t[n][w];
    }

    public static void main(String[] args) {
        Knapsack knapsack = new Knapsack();
        int[] wt = { 1, 2, 3 };
        int[] val = { 6, 10, 12 };
        int w = 5;
        int n = wt.length;
        int result = knapsack.knapSack(w, wt, val, n);
        System.out.println("Maximum value: " + result);
    }
}
